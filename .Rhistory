fit.v %>%
select(model, psill, range, kappa) %>%
kable() %>%
kable_styling(full_width = FALSE)
fit.k <- krige(formula = cl2_total ~ median_income, locations = sites_sub,
newdata = sd_grid, model = fit.v)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
fit.k_ll %<>%
spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
fit.k_ll <- fit.k %>%
spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
sites_sub %<>% spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.50,
right = -116.85, top = 33.20))
ggmap(map_stamen, extent = "device") +
geom_point(aes(x = x1, y = x2, col = var1.pred), fit.k_ll) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites_sub)) +
scale_color_distiller(palette = "YlOrRd", direction = 1)
fit.k_ll <- fit.k %>%
spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
sites_sub %<>% spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
ggmap(map_stamen, extent = "device") +
geom_point(aes(x = x1, y = x2, col = var1.pred), fit.k_ll) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites_sub)) +
scale_color_distiller(palette = "YlOrRd", direction = 1)
fit.k_ll
fit.k_ll <- fit.k %>%
spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
sites_sub %<>% spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(sp)
library(ggmap)
library(tidyverse)
library(magrittr)
library(gstat)
library(knitr)
library(kableExtra)
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1.csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
load("data/sd_grid.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
proj4string(sd_city)
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites$cl2_total <- sapply(as.character(sites_ll$site_ID), function(site){
median(water_testing$cl2_total[water_testing$source == site], na.rm = T)
})
sites_sub <- sites[!is.na(sites$cl2_total),]
sd_tracts@proj4string
sites_sub %<>% spTransform(., proj4string(sd_tracts))
sites_sub_new <- over(sites_sub, sd_tracts)
sites_sub@data %<>%
cbind(median_income = sites_sub_new$median_income)
sites_sub$median_income %>% head
fit.lm <- lm(cl2_total ~ median_income, sites_sub)
tidy.lm <- broom::tidy(fit.lm)
confint.lm <- confint(fit.lm)
cbind(tidy.lm, confint.lm) %>%
kable(row.names = FALSE) %>%
kable_styling(full_width = FALSE)
my_vario <- variogram(cl2_total ~ median_income, sites_sub)
fit.v <- fit.variogram(object = my_vario,
model = vgm(model = "Mat", psill = 0.10, range = 3000, nugget = 0.25))
fit.v %>%
select(model, psill, range, kappa) %>%
kable() %>%
kable_styling(full_width = FALSE)
fit.k <- krige(formula = cl2_total ~ median_income, locations = sites_sub,
newdata = sd_grid, model = fit.v)
fit.k_ll <- fit.k %>%
spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
sites_sub %<>% spTransform(., CRS("+proj=longlat")) %>% as.data.frame()
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.50,
right = -116.85, top = 33.20))
ggmap(map_stamen, extent = "device") +
geom_point(aes(x = x1, y = x2, col = var1.pred), fit.k_ll) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites_sub)) +
scale_color_distiller(palette = "YlOrRd", direction = 1)
ggmap(map_stamen) +
geom_point(aes(x = x1, y = x2, col = var1.pred), fit.k_ll) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites_sub)) +
scale_color_distiller(palette = "YlOrRd", direction = 1)
install.packages("tlmgr.pl")
rmarkdown::render("R/kristine-dinh-continuous-spatial-index.Rmd", output_format = "pdf_document")
setwd("R")
rmarkdown::render("kristine-dinh-continuous-spatial-index.Rmd", output_format = "pdf_document")
sd_city@proj4string
```{r fig.height=3}
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
library(leaflet)
install.packages("leaflet")
library(leaflet)
library(leaflet)
version
getwd()
quivR::quivr_colors()
quivR::quivr_colors(2)
library(tidyverse)
quivR::quivr_colors(2)
y1 <- c(1,2,3,3,4)
rank(y1)
y1 <- c(1,6,2,3,3,4)
rank(y1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sp)
setwd(here::here())
earthquakes <- read.csv("Kansas_Earthquake_Database.csv")
setwd(here::here())
earthquakes <- read.csv("data/Kansas_Earthquake_Database.csv")
coordinates(earthquakes) <- c("Longitude", "Latitude")
proj4string(earthquakes) <- CRS("+proj=longlat")
head(earthquakes)
head(earthquakes)
kansas <- tigris::tracts("KS")
library(tigris)
kansas <- tracts("KS", cb = TRUE)
kansas <- tracts("KS", cb = TRUE, year = 2016)
library(magrittr)
'earthquakes@data$Time'
'earthquakes@data$Time'
earthquakes@data$Time
earthquakes@data$誰..Date
earthquakes@data %<>% rename(Date = 誰..Date)
earthquakes@data$Date
strptime(earthquakes@data$Date, "%m/%d/%y")
earthquakes@data %<>%
mtuate(POSIX = strptime(Date, "%m/%d/%y"))
earthquakes@data %<>%
mutate(POSIX = strptime(Date, "%m/%d/%y"))
earthquakes@data %<>%
mutate("POSIX" = strptime(Date, "%m/%d/%y"))
earthquakes@data
strptime(earthquakes@data$Date, "%m/%d/%y")
strptime(earthquakes@data$Date, "%m/%d/%y") %>% class
earthquakes@data %<>%
mutate("POSIX" = strptime(.$Date, "%m/%d/%y"))
earthquakes@data$POSIX <- strptime(earthquakes@data$Date, "%m/%d/%y"))
earthquakes@data$POSIX <- strptime(earthquakes@data$Date, "%m/%d/%y")
earthquakes@data
max(earthquakes@data$Date)
max(earthquakes@data$POSIX)
which(max(earthquakes@data$POSIX))
which(earthquake@data)
which(earthquakes@data == max(earthquakes@data$POSIX))
which.max(earthquakes@data$POSIX)
which.max(earthquakes$POSIX)
earthquakes@data %>% head
earthquakes@data[earthquakes@data$POSIX == max(earthquakes@data$POSIX)]
earthquakes@data[earthquakes@data$POSIX == max(earthquakes@data$POSIX)] %>% head
max(earthquakes@data$POSIX)
earthquakes@data %>% filter(POSIX == max(earthquakes@data$POSIX))
earthquakes@data[earthquakes@data$POSIX == max(earthquakes@data$POSIX)]
earthquakes$POSIX
a <- earthquakes@data
View(a)
max(earthquakes@data$POSIX)
as.Date(earthquakes@data$POSIX)
max(as.Date(earthquakes@data$POSIX))
earthquakes@data == max(earthquakes@data$POSIX)
earthquakes@data = max(earthquakes@data$POSIX)
which(earthquakes@data == max(earthquakes@data$POSIX))
which(earthquakes@data$POSIX == max(earthquakes@data$POSIX))
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX))]
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
a %>% filter(POSIX == max(POSIX))
a %>% filter(POSIX == max(as.character(POSIX)))
a %>% arrange(desc(POSIX))
a %>% arrange(desc(as.Date(POSIX)))
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data$POSIX %>%
group_by(lubridate::year(POSIX)) %>%
tally()
earthquakes@data %<>%
mutate(year = lubridate::year(POSIX))
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX))
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX)
earthquakes@data$POSIX %>%
group_by(year) %>%
tally()
earthquakes@data %>%
group_by(year) %>%
tally()
tally()
group_by(year) %>% earthquakes@data %>%
group_by(year) %>%
tally()
earthquakes@data %>%
group_by(year) %>%
tally()
earthquakes@data %>%
group_by(year) %>%
tally() %>%
select(year %in% c(2002, 2012, 2015))
earthquakes@data %>%
group_by(year) %>%
tally() %>%
select(year %in% c(2002, 2012, 2015))
earthquakes@data %>%
group_by(year) %>%
tally()
a <- earthquakes@data %>%
group_by(year) %>%
tally()
a$year
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015))
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015))
setwd(here::here())
earthquakes <- read.csv("data/Kansas_Earthquake_Database.csv")
coordinates(earthquakes) <- c("Longitude", "Latitude")
proj4string(earthquakes) <- CRS("+proj=longlat")
# actively producing gas and oil wells in Kansas data
load("data/wells.RData")
# edit data
earthquakes@data %<>% rename(Date = 誰..Date)
setwd(here::here())
earthquakes <- read.csv("data/Kansas_Earthquake_Database.csv")
coordinates(earthquakes) <- c("Longitude", "Latitude")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sp)
library(tigris)
library(magrittr)
setwd(here::here())
earthquakes <- read.csv("data/Kansas_Earthquake_Database.csv")
coordinates(earthquakes) <- c("Longitude", "Latitude")
proj4string(earthquakes) <- CRS("+proj=longlat")
# actively producing gas and oil wells in Kansas data
load("data/wells.RData")
# edit data
earthquakes@data %<>% rename(Date = "誰..Date")
kansas <- tracts("KS", cb = TRUE, year = 2016)
earthquakes@data$POSIX <- strptime(earthquakes@data$Date, "%m/%d/%y")
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX)
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
earthquakes@data$POSIX <- strptime(earthquakes@data$Date, "%m/%d/%y")
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX)
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015))
wells@data$COMPLETION_POSIX
wells@data$COMPLETION_POSIX %>% class
wells@data$COMPLETION_POSIX %<>% as.POSIXct()
wells@data$COMPLETION_POSIX %>% class
wells@data$COMPLETION_POSIX %>% max
wells@data$COMPLETION_POSIX %>% max %>% as.Date()
wells@data
wells@data$COMPLETION_year <- lubridate::year(wells@data$COMPLETION_POSIX)
wells@data$COMPLETION_year
wells@data %>% group_by(COMLETION_year) %>% tally()
wells@data %>% group_by(COMpLETION_year) %>% tally()
wells@data %>% group_by(COMPLETION_year) %>% tally()
wells@data %>% group_by(COMPLETION_year) %>% tally() %>% arrange(desc(n))
wells@data %>% group_by(COMPLETION_year) %>% tally() %>% arrange(desc(n)) %>% topn(1)
wells@data %>% group_by(COMPLETION_year) %>% tally() %>% arrange(desc(n)) %>% top_n(1)
wells@data %>% group_by(COMPLETION_year) %>% summarise(number_of_wells) %>% arrange(desc(n)) %>% top_n(1)
wells@data %>% group_by(COMPLETION_year) %>% summarise(number_of_wells = n()) %>% arrange(desc(n)) %>% top_n(1)
wells@data %>% group_by(COMPLETION_year) %>% summarise(number_of_wells = n()) %>% arrange(desc(number_of_weels)) %>% top_n(1)
wells@data %>% group_by(COMPLETION_year) %>% summarise(number_of_wells = n()) %>% arrange(desc(number_of_wells)) %>% top_n(1)
wells@data$COMPLETION_year <- lubridate::year(wells@data$COMPLETION_POSIX)
wells@data %>%
group_by(COMPLETION_year) %>%
summarise(number_of_wells = n()) %>%
arrange(desc(number_of_wells)) %>%
top_n(1)
wells@data %>%
group_by(COMPLETION_year) %>%
summarise(number_of_wells = n()) %>%
arrange(desc(number_of_wells)) %>%
top_n(1)
wells@data %>%
group_by(COMPLETION_year) %>%
summarise(number_of_wells = length(unique(KID))) %>%
arrange(desc(number_of_wells)) %>%
top_n(1)
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ] %>% data.frame()
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX)
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015))
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015))
%>% as.data.frame()
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015)) %>% as.data.frame()
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX)
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015)) %>%
as.data.frame()
wells@data$COMPLETION_POSIX %<>% as.POSIXct()
head(kansas@polygons[[1]]@Polygons[[1]]@coords)
proj4string(earthquakes)
proj4string(wells)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(sp)
library(tigris)
library(magrittr)
library(spatstat)
library(fields)
setwd(here::here())
earthquakes <- read.csv("data/Kansas_Earthquake_Database.csv")
coordinates(earthquakes) <- c("Longitude", "Latitude")
proj4string(earthquakes) <- CRS("+proj=longlat")
# actively producing gas and oil wells in Kansas data
load("data/wells.RData")
# edit data
earthquakes@data %<>% rename(Date = "誰..Date")
states <- states(cb = TRUE, resolution = "20m")
kansas <- states[states$NAME == "Kansas", ]
earthquakes@data$POSIX <- strptime(earthquakes@data$Date, "%m/%d/%y")
earthquakes@data[which(earthquakes@data$POSIX == max(earthquakes@data$POSIX)), ]
earthquakes@data$year <- lubridate::year(earthquakes@data$POSIX)
earthquakes@data %>%
group_by(year) %>%
tally() %>%
filter(year %in% c(2002, 2012, 2015)) %>%
as.data.frame()
wells@data$COMPLETION_POSIX %<>% as.POSIXct()
wells@data$COMPLETION_year <- lubridate::year(wells@data$COMPLETION_POSIX)
wells@data %>%
group_by(COMPLETION_year) %>%
summarise(number_of_wells = n()) %>%
arrange(desc(number_of_wells)) %>%
head(1) %>%
as.data.frame()
CRS_new <- CRS("+proj=utm +zone=13")
kansas_utm <- spTransform(kansas, CRS_new)
earthquakes_utm <- spTransform(earthquakes, CRS_new)
wells_utm <- spTransform(wells, CRS_new)
head(kansas_utm@polygons[[1]]@Polygons[[1]]@coords)
head(earthquakes_utm@coords)
head(wells_utm@coords)
earthquakes_ppp <- ppp(earthquakes_utm@coords[,1], earthquakes_utm@coords[,2], window = as.owin(kansas_utm))
G_earthquake <- Gest(earthquakes_ppp)
F_earthquake <- Fest(earthquakes_ppp)
par(mfrow=c(1,2))
plot(G_earthquake)
plot(F_earthquake)
earthquakes_density_ppl <- density(earthquakes_ppp, sigma = bw.ppl)
plot(earthquakes_density_ppl)
K_earthquake <- Kest(earthquakes_ppp)
plot(K_earthquake)
x <- rpoint(500, win = as.owin(kansas_utm))
plot(x)
set.seed(2020)
n_control <- 5e2
controls <- runifpoint(n_control, win = as.owin(kansas_utm))
wells_pre2014 <- wells_utm[which(wells_utm$COMPLETION_POSIX < "2014-01-01"), ]
earthquakes_post2014 <- earthquakes_utm[earthquakes_utm$POSIX > "2013-12-31", ]
earthquakes_1 <- data.frame(earthquakes_post2014@coords, z = 1) %>%
rename(x = Longitude, y = Latitude)
earthquakes_0 <- cbind(data.frame(controls), z = 0)
earthquakes_df <- rbind(earthquakes_1, earthquakes_0)
earthquakes_df$z <- as.factor(earthquakes_df$z)
coordinates(earthquakes_df) <- c('x', 'y')
# table(earthquakes_df$z)
d2wells <- rdist(earthquakes_df@coords, wells@coords)
dim(d2wells)
d2nearest_well <- apply(d2wells, 1, min)
head(d2nearest_well)
length(d2nearest_well)
d2wells <- rdist(earthquakes_df@coords, wells_utm@coords)
wells_utm@coords
dim(d2wells)
d2nearest_well <- apply(d2wells, 1, min)
head(d2nearest_well)
length(d2nearest_well)
d2wells <- rdist(earthquakes_df@coords, wells_pre2014@coords)
dim(d2wells)
d2nearest_well <- apply(d2wells, 1, min)
head(d2nearest_well)
length(d2nearest_well)
d2nearest_well %>% head
d2nearest_well %>% class
d2nearest_well
earthquakes_glm <- glm(earthquakes_df$z ~ d2nearest_well, family = binomial(link = "logit"))
confint(earthquakes_glm)
confint(earthquakes_glm) %>% round(4)
confint(earthquakes_glm) %>% round(5)
confint(earthquakes_glm) %>% round(6)
summary(earthquakes_glm)
coef(earthquakes_glm)
coef(earthquakes_glm)[1]
coef(earthquakes_glm)[2]
coef(earthquakes_glm)[2] %>% round(4)
round(coef(earthquakes_glm)[2], 4)
round(coef(earthquakes_glm)[[2]], 4)
round(coef(earthquakes_glm)[[2]], 3)
round(coef(earthquakes_glm)[[2]], 5)
wells@data %>%
group_by(COMPLETION_year) %>%
summarise(number_of_wells = n()) %>%
arrange(desc(number_of_wells)) %>%
head(1) %>%
as.data.frame()
earthquakes_glm <- glm(earthquakes_df$z ~ d2nearest_well, family = binomial(link = "logit"))
confint(earthquakes_glm) %>% round(6)
earthquakes_df$z
library(mgcv)
library(mgcv)
earthquakes_gam <- gam(earthquakes_df$z ~ d2nearest_well, s(x, y), family = binomial(link = "logit"))
earthquakes_gam <- gam(earthquakes_df$z ~ d2nearest_well, s(x, y), data = earthquakes_df, family = binomial(link = "logit"))
earthquakes_gam <- gam(earthquakes_df$z ~ d2nearest_well + s(x, y), family = binomial(link = "logit"))
earthquakes_gam <- gam(earthquakes_df$z ~ d2nearest_well + s(x, y), data = earthquakes_gam, family = binomial(link = "logit"))
earthquakes_gam <- gam(earthquakes_df$z ~ d2nearest_well + s(x, y), data = earthquakes_df, family = binomial(link = "logit"))
confint(earthquakes_gam) %>% round(6)
summary(earthquakes_gam)
summary(earthquakes_glm)
earthquakes_glm %>% tidy
library(broom)
earthquakes_glm %>% tidy
earthquakes_glm %>% tidy
tidy_glm <- tidy(earthquakes_glm)
tidy(earthquakes_glm) %>% cbind(confint(earthquakes_glm))
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm)) %>%
kable()
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm))
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm)) %>% select(-term)
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm))
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm))
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm)) %>% row.names()
tidy(earthquakes_glm) %>%
cbind(confint(earthquakes_glm))
tidy(earthquakes_gam)
tidy(earthquakes_gam)
summary(earthquakes_gam)
x <- rpoint(500, f = earthquakes_density_ppl, win = as.owin(kansas_utm))
earthquakes_density_ppl
earthquakes_density_ppl$v
earthquakes_density_ppl$v %>% class
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0]
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0 & !is.na(earthquakes_density_ppl$v)]
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0 & !is.na(earthquakes_density_ppl$v)] <- 0
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0 & !is.na(earthquakes_density_ppl$v)]
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0 & !is.na(earthquakes_density_ppl$v)] <- 0
x <- rpoint(500, f = earthquakes_density_ppl, win = as.owin(kansas_utm))
plot(x)
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0] <- 0
x <- rpoint(500, f = earthquakes_density_ppl, win = as.owin(kansas_utm))
plot(x)
K_earthquake$r
plot(K_earthquake$r)
x$n
x$x
x$markformat
x$window
simulation <- rpoint(500, f = earthquakes_density_ppl, win = as.owin(kansas_utm))
earthquakes_density_ppl$v[earthquakes_density_ppl$v < 0] <- 0
simulation <- rpoint(500, f = earthquakes_density_ppl, win = as.owin(kansas_utm))
plot(simulation)
K_simulation <- Kest(K_simulation)
simulation_ppp <- ppp(simulation$x, simulation$y, window = as.owin(kansas_utm))
K_simulation <- Kest(simulation_ppp)
plot(K_simulation)
K_simulation$r
plot(K_simulation)
earthquakes@data %>%
group_by(year) %>%
summarise(number_of_earthquakes = n()) %>%
filter(year %in% c(2002, 2012, 2015)) %>%
as.data.frame()
