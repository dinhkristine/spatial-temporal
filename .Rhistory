geom_point(aes(x = lng, y = lat), data = data.frame(art))
bbox <- c(left = -117.5, bottom = 32.50, right = -116.5, top = 33.2)
art_map <- get_stamenmap(bbox = bbox)
ggmap(art_map) +
geom_point(aes(x = lng, y = lat), data = data.frame(art))
bbox <- c(left = -117.5, bottom = 32.50, right = -116.75, top = 33.2)
art_map <- get_stamenmap(bbox = bbox)
ggmap(art_map) +
geom_point(aes(x = lng, y = lat), data = data.frame(art))
art_map
art@coords.nrs
art@coords
art@coords %>% summary
bbox <- c(left = -117.3, bottom = 32.55, right = -117.0, top = 33.02)
art_map <- get_stamenmap(bbox = bbox)
ggmap(art_map) +
geom_point(aes(x = lng, y = lat), data = data.frame(art))
data.frame(art)
data.frame(art) %>% summary
bbox <- c(left = -117.3, bottom = 32.55, right = -117.0, top = 33.02)
art_map <- get_stamenmap(bbox = bbox)
ggmap(art_map) +
geom_point(aes(x = lng, y = lat), data = data.frame(art))
Sys.time()
format(Sys.time(), "Y")
format(Sys.time(), "%Y")
format(Sys.time(), "%Y%m")
format(Sys.time(), "%Y-%m")
format(Sys.time(), "%Y-%mm")
format(Sys.time(), "%Y-%mon")
format(Sys.time(), "%Y-%M")
format(Sys.time(), "%Y-%m")
format(Sys.time(), "%Y-%m-$d")
format(Sys.time(), "%Y-%m-%
d")
format(Sys.time(), "%Y-%m-%d")
p1 <- plot(sd_tracts, main = "Unprojected sensus tracts")
p2 <- plot(sd_tracts_proj, main = "UTM-projected tracts")
grid.arrange(p1, p2, ncol = 2)
gridExtra::grid.arrange()
gridExtra::grid.arrange(p1, p2, ncol = 2)
plot(sd_tracts, main = "Unprojected sensus tracts")
plot(sd_tracts_proj, main = "UTM-projected tracts")
areas_proj <- sapply(sd_tracts_proj@polygons, function(x) x@area)
head(areas_proj)
areas_proj <- sapply(sd_tracts_proj@polygons, function(x) x@area)
head(areas_proj)
setwd(here::here())
art <- read.csv("data/public_art_locations_datasd_v1.csv")
coordinates(art) <- c("lng", "lat")
proj4string(art) <- CRS(proj_string)
CRL <- SpatialPoints(coords = data.frame(lng = -117.0561, lat = 32.76941))
proj4string(CRL) <- CRS(proj_string)
MVL <- SpatialPoints(coords = data.frame(lng = -117.1269, lat = 32.7793))
proj4string(MVL) <- CRS(proj_string)
over(MVL, sd_tracts)$NAME
over(MVL, sd_tracts)$NAME[[1]]
over(MVL, sd_tracts)$NAME
art_over_tracts <- over(art, sd_tracts)
art_over_tracts
art_over_tracts$NAME
art_over_tracts$NAME[[1]]
(art_over_tracts$NAME == 93.04) %>% sum
areas_proj[which(sd_tracts$NAME == 93.04)]
areas_proj[which(sd_tracts$NAME == 93.04)]
# CRL
areas_proj[which(sd_tracts$NAME == 29.05)] / sum(art_over_tracts$NAME == 29.05)
#MVL
areas_proj[which(sd_tracts$NAME == 93.04)] / sum(art_over_tracts$NAME == 93.04)
bbox <- c(left = -117.3, bottom = 32.55, right = -117.0, top = 33.02)
art_map <- get_stamenmap(bbox = bbox)
ggmap(art_map) +
geom_point(aes(x = lng, y = lat), data = data.frame(art))
art_over_tracts <- over(art, sd_tracts)
art_over_tracts %>% head
areas_proj[which(sd_tracts$NAME == 93.04)]
as.character(areas_proj[which(sd_tracts$NAME == 93.04)])
as.character(round(areas_proj[which(sd_tracts$NAME == 93.04)]))
areas_proj[which(sd_tracts$NAME == 29.05)] / sum(art_over_tracts$NAME == 29.05)
round(areas_proj[which(sd_tracts$NAME == 29.05)] / sum(art_over_tracts$NAME == 29.05))
as.character(round(areas_proj[which(sd_tracts$NAME == 29.05)] / sum(art_over_tracts$NAME == 29.05)))
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "watercolor", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "toner-background", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "toner", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "toner-lines", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "toner-hybrid", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = " toner-2011", color = "bw")
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "toner-2011", color = "bw")
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "toner-2011", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "terrain-labels", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "terrain-background", color = "bw")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "terrain-background", color = "red")
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "terrain-background", color = "color")
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "terrain-background", color = "color")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox = bbox, maptype = "terrain-background")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox, maptype = "toner-lite")
ggmap(art_map_wc)
art_map_wc <- get_stamenmap(bbox, maptype = "toner-lite") %>% ggmap
get_stamenmap(bbox, maptype = "toner-lite") %>% ggmap
bbox <- c(left = -117.3, bottom = 32.55, right = -117.0, top = 33.02)
art_map <- get_stamenmap(bbox = bbox)
ggmap(art_map) +
geom_point(aes(x = lng, y = lat), data = data.frame(art))
get_stamenmap(bbox, maptype = "toner-lite") %>% ggmap
get_stamenmap(bbox) %>% ggmap
get_stamenmap(bbox, color = "color") %>% ggmap
get_stamenmap(bbox, color = "bw") %>% ggmap
as.character(round(areas_proj[which(sd_tracts$NAME == 29.05)] / sum(art_over_tracts$NAME == 29.05)))
tinytex::install_tinytex()
x:::is_tinytex()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
install.packages('tinytex')
tinytex::install_tinytex()
tinytex::install_tinytex()
remove.packages("tinytex")
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::tlmgr_update()
tinytex:::install_prebuilt()
tinytex:::is_tinytex()
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
plot(sd_tracts, main = "Unprojected sensus tracts")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(sp)
library(tigris)
library(tidyverse)
library(data.table)
library(ggmap)
#parameters
proj_string <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
setwd(here::here())
graffiti <- read.csv("data/get_it_done_graffiti_removal_requests_datasd_v1.csv")
plot(sd_tracts, main = "Unprojected sensus tracts")
plot(sd_tracts, main = "Unprojected sensus tracts")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(sp)
library(tigris)
library(tidyverse)
library(data.table)
library(ggmap)
#parameters
proj_string <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
setwd(here::here())
graffiti <- read.csv("data/get_it_done_graffiti_removal_requests_datasd_v1.csv")
setwd(here::here())
graffiti <- read.csv("data/get_it_done_graffiti_removal_requests_datasd_v1.csv")
setwd(here::here())
here::here()
setwd("C:/Users/kdinh.ARROW/Projects/patio-temporal/")
setwd(here::here())
graffiti <- read.csv("data/get_it_done_graffiti_removal_requests_datasd_v1.csv")
here::here()
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(sp)
library(tigris)
library(tidyverse)
library(data.table)
library(ggmap)
#parameters
proj_string <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
setwd(here::here())
graffiti <- read.csv("data/get_it_done_graffiti_removal_requests_datasd_v1.csv")
graffiti <- graffiti[!is.na(graffiti$lng) & !is.na(graffiti$lat), ]
graffiti$POSIX_requested <- strptime(graffiti$date_requested, format = "%Y-%m-%dT%T", tz = "America/Los_Angeles")
hist(graffiti$POSIX_requested, breaks = "months", freq = T, xlab = "time", main = "graffiti reports")
sd_tracts <- tracts(state = "CA", county = "San Diego")
areas <- sapply(sd_tracts@polygons, function(x) x@area)
sd_tracts_proj <- spTransform(sd_tracts, CRS("+proj=utm +zone=11"))
plot(sd_tracts, main = "Unprojected sensus tracts")
plot(sd_tracts_proj, main = "UTM-projected tracts")
plot(sd_tracts, main = "Unprojected sensus tracts")
plot(sd_tracts_proj, main = "UTM-projected tracts")
knitr::opts_chunk$set(echo = TRUE)
library(sp)
load("city_boundary.RData") #loads sd_city variable
library(sp)
load("data/city_boundary.RData") #loads sd_city variable
getwd()
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
class(sd_city)
class(sd_city)[[1]]
sd_city@data
sd_city@polygons
sd_city@polygons
sd_city@data[[1]]
sd_city@data[2]
sd_city@data[3]
sd_city@plotOrder
sd_city@bbox
sd_city@proj4string
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv(url("data/indicator_bacteria_tests_datasd_v1 (1).csv"))
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
library(tidyverse)
library(sp)
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
proj4string(sd_city)
plot(sites)
library(ggmap)
ggmap(sd_city)
map <- get_googlemap(apply(meuse_ll@coords, 2, median), zoom = 13, color = "bw")
sd_city@polygons
sd_city
sd_city$objectid
sd_city$code
sd_city@polygons
map <- get_googlemap(apply(sd_city, 2, median), zoom = 13, color = "bw")
map <- get_googlemap(apply(sd_city@polygons, 2, median), zoom = 13, color = "bw")
map <- get_stamenmap(bbox = c(left = 5.68, bottom = 50.92,
right = 5.8, top = 51.02))
ggmap(map, extent = "device")
sd_city@polygons
sd_city@polygons[[1]]
sd_city@polygons[[1]]@Polygons[[1]]
sd_city@polygons[[1]]@Polygons[[1]]@coords
map <- get_stamenmap(apply(sd_city@polygons[[1]]@Polygons[[1]]@coords, 2, median), zoom = 13, color = "bw")
sd_city@polygons[[1]]@Polygons[[1]]@coords %>% max
sd_city@polygons[[1]]@Polygons[[1]]@coords[1]
sd_city@polygons[[1]]@Polygons[[1]]@coords[[1]]
sd_city@polygons[[1]]@Polygons[[1]]@coords[,1]
sd_city@polygons[[1]]@Polygons[[1]]@coords[,1] %>% max()
sd_city@polygons[[1]]@Polygons[[1]]@coords[,1] %>% min()
sd_city@polygons[[1]]@Polygons[[1]]@coords[,2] %>% min()
sd_city@polygons[[1]]@Polygons[[1]]@coords[,2] %>% max()
map_stamen <- get_stamenmap(bbox = c(left = 6328117, bottom = 1894696,
right = 6327829, top = 1894427))
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
sites_11
sites_ll
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites_;;
sites_ll
proj4string(sd_city)
sites <- spTransform(sites_ll, proj4string(sd_city))
sites
sites@coords
apply(sites@coords, 2, median)
map <- get_stamenmap(apply(sites@coords, 2, median))
map <- get_googlemap(apply(sites@coords, 2, median))
proj4string(sites)
sites <- spTransform(sites, CRS("+proj=longlat"))
sites@coords
map <- get_googlemap(apply(sites@coords, 2, median))
summary(sites@coords)
map_stamen <- get_stamenmap(bbox = c(left = 32.55, bottom = -117.3,
right = 33.05, top = -116.9))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = x, y = y), data = as.data.frame(meuse_ll))
ggmap(map_stamen) +
geom_point(aes(x = x, y = y), data = as.data.frame(sites))
map_stamen
map_stamen
sites
ggmap(map_stamen) +
geom_point(data = as.data.frame(sites))
ggmap(map_stamen) +
geom_point(sites)
head(sites)
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = x, y = y), data = as.data.frame(sites))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sp)
library(ggmap)
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites$cl2_total <- sapply(as.character(sites_ll$site_ID), function(site){
median(water_testing$cl2_total[water_testing$source == site], na.rm = T)
})
sites$cl2_total
water_testing$cl2_total
sites_ll$site_ID
sites_ll$site_ID %>% as.character()
sites_ll$site_ID %>% as.character() %>% unique
water_testing$source
water_testing$source  %>% as.character()
water_testing$source  %>% as.character() %>% unique
c(sites_ll$site_ID %>% as.character() %>% unique, median(water_testing$cl2_total[water_testing$source == site])
)
water_testing$source %>% as.character() %>% unieuq
water_testing$source %>% as.character() %>% unique
setdiff(water_testing$source %>% as.character() %>% unique, sites_ll$site_ID %>% as.character() %>% unique)
setdiff(water_testing$source %>% as.character() %>% unique, sites_ll$site_ID %>% as.character() %>% unique) %>% length
setdiff(sites_ll$site_ID %>% as.character() %>% unique, water_testing$source %>% as.character() %>% unique)
setdiff(sites_ll$site_ID %>% as.character() %>% unique, water_testing$source %>% as.character() %>% unique) %>% length()
sites %>%
filter(!is.na(cl2_total))
sites
class(sites)
sites$cl2_total[!is.na(sites$cl2_total)]
sites_sub <- sites$cl2_total[!is.na(sites$cl2_total)]
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("sd_tracts_income.RData")
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites$cl2_total <- sapply(as.character(sites_ll$site_ID), function(site){
median(water_testing$cl2_total[water_testing$source == site], na.rm = T)
})
sites_sub <- sites$cl2_total[!is.na(sites$cl2_total)]
sd_tracts@proj4string
sd_tracts %>% head()
sd_tracts@data %>% head
sd_tracts@data$NAME[sd_tracts@data$median_income == min(sd_tracts@data$median_income)]
sd_tracts@data$NAME[sd_tracts@data$median_income == max(sd_tracts@data$median_income)]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sp)
library(ggmap)
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
sites <- spTransform(sites, CRS("+proj=longlat"))
map_stamen <- get_stamenmap(bbox = c(left = -117.3, bottom = 32.55 ,
right = -116.9, top = 33.05))
ggmap(map_stamen) +
geom_point(aes(x = lng, y = lat), data = as.data.frame(sites))
sites$cl2_total <- sapply(as.character(sites_ll$site_ID), function(site){
median(water_testing$cl2_total[water_testing$source == site], na.rm = T)
})
sd_tracts@proj4string
sd_tracts@data$NAME[sd_tracts@data$median_income == min(sd_tracts@data$median_income)]
sd_tracts@data$NAME[sd_tracts@data$median_income == max(sd_tracts@data$median_income)]
knitr::opts_chunk$set(echo = TRUE)
setwd(here::here())
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
getwd()
getwd()
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
?knitr::knit
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
knitr::opts_knit$set(root.dir = here::here())
# coordinates(sites_ll) <- c("lng", "lat")
# proj4string(sites_ll) <- CRS("+proj=longlat")
# sites <- spTransform(sites_ll, proj4string(sd_city))
getwd()
knitr::opts_knit$set(root.dir = here::here())
knitr::opts_knit$set(root.dir = here::here())
# setwd(here::here())
# load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
knitr::opts_knit$set(here::here())
knitr::opts_knit$set(here::here())
# setwd(here::here())
# load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
knitr::opts_knit$get()
knitr::opts_knit$get()
knitr::opts_knit$get()$root_dir
knitr::opts_knit$get$root.dir
knitr::opts_knit$get($root.dir)
knitr::opts_knit$get(root.dir)
a <- knitr::opts_knit$get()
a$root.dir
knitr::opts_knit$set(root.dir = here::here())
knitr::opts_knit$set(root.dir = here::here("R"))
a <- knitr::opts_knit$get()
a$root.dir
knitr::opts_knit$set(root.dir = here::here())
knitr::opts_knit$get())$root.dir
(knitr::opts_knit$get())$root.dir
setwd((knitr::opts_knit$get())$root.dir)
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
# prepare data
coordinates(sites_ll) <- c("lng", "lat")
proj4string(sites_ll) <- CRS("+proj=longlat")
sites <- spTransform(sites_ll, proj4string(sd_city))
knitr::opts_chunk$set(echo = TRUE, root_dir = here::here())
knitr::opts_chunk$set(echo = TRUE, root_dir = here::here())
# setwd(here::here())
getwd()
here::here()
knitr::opts_chunk$set(echo = TRUE, root_dir = here::here())
load("data/city_boundary.RData") #loads sd_city variable
knirt::opts_knit(root_dir = here::here())
knitr::opts_knit(root_dir = here::here())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root_dir = here::here())
getwd()
knitr::opts_knit$set(root_dir = "C:/Users/kdinh.ARROW/Projects/patio-temporal")
knitr::opts_chunk$set(echo = TRUE)
setwd(here::here())
load("data/city_boundary.RData") #loads sd_city variable
water_testing <- read.csv("data/indicator_bacteria_tests_datasd_v1 (1).csv")
sites_ll <- read.csv("data/sample_sites_datasd_v1.csv")
load("data/sd_tracts_income.RData")
